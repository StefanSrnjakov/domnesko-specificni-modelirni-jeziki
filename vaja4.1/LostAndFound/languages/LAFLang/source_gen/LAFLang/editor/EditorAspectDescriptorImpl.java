package LAFLang.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new About_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Api_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ApiGet_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ApiPost_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new AppDescription_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Components_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Endpoints_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new FoundItems_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Home_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Layout_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Links_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new ListFoundLink_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new ListLostLink_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new LostItems_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new Pages_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new QuickLinks_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new ReportFound_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new ReportFoundLink_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new ReportLost_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new ReportLostLink_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new Theme_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e563a10c2L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5629c05fL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5629c062L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5629c066L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x1cb5501e1f91b6dcL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e56342a8eL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5629c0e1L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e563a10bfL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5637b051L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5626a39eL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e563e002dL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5640e43eL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5640e43dL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e563a10beL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5631d7a0L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e563c973bL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e563a10c1L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5640e43cL), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e563a10c0L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5640e434L), MetaIdFactory.conceptId(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5616bba7L)).seal();
}
