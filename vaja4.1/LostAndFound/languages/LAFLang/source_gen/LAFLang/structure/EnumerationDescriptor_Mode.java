package LAFLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_Mode extends EnumerationDescriptorBase {

  public EnumerationDescriptor_Mode() {
    super(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5616bbadL, "Mode", "r:b1a94a14-22d3-46bf-a434-442a7523a97d(LAFLang.structure)/3734161451826723757");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_dark_0 = new EnumerationDescriptor.MemberDescriptor("dark", "dark", 0x33d2680e5616bbaeL, "r:b1a94a14-22d3-46bf-a434-442a7523a97d(LAFLang.structure)/3734161451826723758");
  private final EnumerationDescriptor.MemberDescriptor myMember_light_0 = new EnumerationDescriptor.MemberDescriptor("light", "light", 0x33d2680e5616bbafL, "r:b1a94a14-22d3-46bf-a434-442a7523a97d(LAFLang.structure)/3734161451826723759");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xb82b0909bdfe46caL, 0xb9021bba8a0c6791L, 0x33d2680e5616bbadL, 0x33d2680e5616bbaeL, 0x33d2680e5616bbafL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_dark_0, myMember_light_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return myMember_light_0;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "dark":
        return myMember_dark_0;
      case "light":
        return myMember_light_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
