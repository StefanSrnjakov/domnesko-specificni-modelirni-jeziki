package ReykilLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import ReykilLanguage.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.ComponentRender:
        return new ComponentRender_TextGen();
      case LanguageConceptSwitch.ParagraphRender:
        return new ParagraphRender_TextGen();
      case LanguageConceptSwitch.RComponent:
        return new RComponent_TextGen();
      case LanguageConceptSwitch.ReykillDSL:
        return new ReykillDSL_TextGen();
      case LanguageConceptSwitch.TitleRender:
        return new TitleRender_TextGen();
    }
    return null;
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(CONCEPTS.ReykillDSL$Hm)) {
        String fname = getFileName_ReykillDSL(root);
        String ext = getFileExtension_ReykillDSL(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), getPath_ReykillDSL(root), root);
        continue;
      }
    }
  }
  private static String getFileName_ReykillDSL(SNode node) {
    return SPropertyOperations.getString(node, PROPS.dsl_name$ygwF);
  }
  private static String getFileExtension_ReykillDSL(SNode node) {
    return "js";
  }
  private static String getPath_ReykillDSL(SNode node) {
    return "myNotes/";
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept ReykillDSL$Hm = MetaAdapterFactory.getConcept(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x64d22d80fe48070dL, "ReykilLanguage.structure.ReykillDSL");
  }

  private static final class PROPS {
    /*package*/ static final SProperty dsl_name$ygwF = MetaAdapterFactory.getProperty(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x64d22d80fe48070dL, 0x64d22d80fe480711L, "dsl_name");
  }
}
