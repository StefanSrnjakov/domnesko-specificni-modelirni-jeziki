package ReykilLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ComponentRender_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ParagraphRender_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new RApi_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new RComponent_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new REndPoint_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ReykillDSL_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new TitleRender_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new ComponentRender_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x1062a8c9abf0339fL), MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x2d9e4360eafebf33L), MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x64d22d80fe4b4a9bL), MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x64d22d80fe48072aL), MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x64d22d80fe4b4aa1L), MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x64d22d80fe48070dL), MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x2d9e4360eb010b74L)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x3ba2139d18a14caaL, 0x99b1d518013c442fL, 0x1062a8c9abf0339fL)).seal();
}
